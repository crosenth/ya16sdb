#!/usr/bin/env ansible-playbook

- hosts: localhost
  become: no

  vars_files:
    - dash-vars.yml

  vars:
    CLOUDFORMATION_PARAMS:
      DataBucketName: "{{ S3_BUCKET }}"
    TARGETS:
      - dokku-stack-apps

  tasks:
    - fail: msg="ansible version is {{ ansible_version['full'] }}, requires >= 2.7"
      when: ansible_version['full'] is version('2.7', '<')
      tags:
        - always
        - ansible-version

    - name: deploy AWS stack
      block:
      - name: generate cloudformation json from troposphere file
        shell: "python {{ STACK_NAME }}.template.py > ./{{ STACK_NAME }}.generated.json"
        tags: generate-json

      - name: deploy the cloudformation template for this stack
        cloudformation:
          profile: "{{ AWS_PROFILE }}"
          stack_name: "{{ STACK_NAME }}"
          state: "present"
          region: "us-west-2"
          create_changeset: true
          template: "./{{ STACK_NAME }}.generated.json"
          template_parameters: "{{ CLOUDFORMATION_PARAMS }}"
        register: stack


- hosts: "{{ ENV }}"
  become: yes
  become_user: dokku

  vars_files:
    - dash-vars.yml

  tasks:

    - name: "check if {{ APPNAME }} exists"
      shell: "dokku apps:exists {{ APPNAME }}"
      register: app_exists
      ignore_errors: True

    - name: "create {{ APPNAME }}"
      shell: "dokku {{ item }}"
      with_items:
        - "apps:create {{ APPNAME }}"
        - "git:initialize {{ APPNAME }}"
      when: app_exists.rc == 1

    - name: configure the application
      shell: "dokku {{ item }}"
      with_items:
        - "domains:add {{ APPNAME }} {{ HOSTNAME }}"
        - "robots.txt:disallow {{ APPNAME }}"

    # some of the values contain spaces and newlines, so we base64
    # encode all of them using a jinja2 filter and identify them as
    # --encoded
    - name: set environment variables
      shell: "dokku config:set --encoded --no-restart {{ APPNAME }} {{ item }}"
      with_items:
        - "DATA_FILE={{ DATA_FILE | b64encode }}"
      no_log: true
      tags:
        - env-vars

    - name: restart dokku app
      shell: "dokku ps:restart {{ APPNAME }}"
  tags:
    - deploy-app